/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Login;

import DBcon.Connection1;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;

/**
 *
 * @author Hinka
 */
public class edit extends javax.swing.JFrame {

    /**
     * Creates new form edit
     */
    boolean flag=false;
    int oldIn;
    int oldBal;
    boolean undo_,undo1_;
    public edit() {
        initComponents();
        setIcon();
        this.initBox();
        //itemList.removeAllItems();
        
     
    }
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("QE.png")));
        
    }
    private void initBox()
    {
        Connection con=null;
        ResultSet rs=null;
        PreparedStatement ps=null;
        
        System.out.println("con called");
        try
        {
            con=Connection1.getCon();
            ps = con.prepareStatement("select distinct p_item from product");
            rs = ps.executeQuery();
            while(rs.next())
            {
                //System.out.println(rs.getString(1)+"l6");
                itemList.addItem(rs.getString(1));
                itemList2.addItem(rs.getString(1));
            }
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
        finally
        {
            try {
                rs.close();
                ps.close();
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Registry.class.getName()).log(Level.SEVERE, null, ex);
            }
         
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        itemList = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        out = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        toWhom = new javax.swing.JTextField();
        edit = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        undo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        itemList2 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        in2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        bal2 = new javax.swing.JLabel();
        edit2 = new javax.swing.JButton();
        cancel2 = new javax.swing.JButton();
        undo1 = new javax.swing.JButton();
        warning = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QualityEngineering-Edit");
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Item Name");

        itemList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemListMouseClicked(evt);
            }
        });
        itemList.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                itemListInputMethodTextChanged(evt);
            }
        });
        itemList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemListActionPerformed(evt);
            }
        });
        itemList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemListKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Outward");

        out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Balance");

        bal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bal.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("ToWhom");

        toWhom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toWhomActionPerformed(evt);
            }
        });

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        undo.setText("Undo");
        undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(itemList, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(undo)
                                .addGap(18, 18, 18)
                                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(toWhom, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bal)
                                    .addComponent(out, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(itemList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bal))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(toWhom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit)
                    .addComponent(undo)
                    .addComponent(cancel))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("OUTWARD", jPanel1);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Item Name");

        itemList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemList2MouseClicked(evt);
            }
        });
        itemList2.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                itemList2InputMethodTextChanged(evt);
            }
        });
        itemList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemList2ActionPerformed(evt);
            }
        });
        itemList2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemList2KeyPressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Inward ");

        in2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                in2ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Balance");

        bal2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bal2.setText("0");

        edit2.setText("Edit");
        edit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit2ActionPerformed(evt);
            }
        });

        cancel2.setText("Cancel");
        cancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel2ActionPerformed(evt);
            }
        });

        undo1.setText("Undo");
        undo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel14))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bal2)
                                    .addComponent(in2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(edit2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(undo1)
                                .addGap(18, 18, 18)
                                .addComponent(cancel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(itemList2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(itemList2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(in2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(bal2))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit2)
                    .addComponent(cancel2)
                    .addComponent(undo1))
                .addGap(0, 62, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("INWARD", jPanel2);

        warning.setForeground(new java.awt.Color(0, 153, 0));
        warning.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(warning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warning)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void itemListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemListActionPerformed
        // TODO add your handling code here:
        
        String str=null;
        Connection con=null;
        ResultSet rs=null;
        PreparedStatement ps=null;
                
        try
        {
            str = (String)itemList.getSelectedItem();
            System.out.println(evt.getActionCommand());
            System.out.println("itemlistAF Here1  "+str);
            con=Connection1.getCon();
            ps = con.prepareStatement("select inward,outward,balance from product where p_item=? and id=(select max(id) from product where p_item=?)");
            ps.setString(1,str);
            ps.setString(2,str);
            rs = ps.executeQuery();
            rs.next();
            System.out.println("Here1234    " +rs.getInt(1));
            bal.setText(String.valueOf(rs.getInt(3)));
            oldIn=rs.getInt(1);
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
        finally
        {
            try {
                rs.close();
                ps.close();
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Registry.class.getName()).log(Level.SEVERE, null, ex);
            }
         
        }
        
        
        
        
    }//GEN-LAST:event_itemListActionPerformed

    private void itemListInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_itemListInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_itemListInputMethodTextChanged

    private void itemListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemListKeyPressed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_itemListKeyPressed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        itemList.removeAllItems();
        Registry reg = null;
        
        try {
            reg = new Registry();
        } catch (SQLException ex) {
            Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
        }
        reg.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
                
        String str=(String)itemList.getSelectedItem();
        String towhom=toWhom.getText();
        int outward;
        try
        {
        outward=Integer.parseInt(out.getText());
        }
        catch(NumberFormatException e)
        {
            warning.setForeground(Color.red);
            warning.setText("Outward field can't be empty");
            return;
        }
        int balance = Integer.parseInt(bal.getText());
        System.out.println("check eap "+outward);
        
        if(outward>balance)
        {
            System.out.println("in elseif");
            warning.setForeground(Color.red);
            warning.setText("Warning: "+str+"'s Balance is not Enough!");
            System.out.println("trial:"+warning.getText());
            
        }
        else
        {
            System.out.println("inward>outward");
            Connection con=null;
            PreparedStatement ps=null;
            try
            {
                con=Connection1.getCon();
                System.out.println("before query");
                 //java.sql.Date date1=rs.getDate(1);*/
                Calendar calendar = Calendar.getInstance();
                java.sql.Date date = new java.sql.Date(calendar.getTime().getTime());
                
                if(towhom.equals(""))
                {
                    warning.setForeground(Color.red);
                    warning.setText("ToWhom field can't be empty");
                    return;
                }
                
                System.out.println(str);
                ps = con.prepareStatement("insert into product(p_item,towhom,date,outward,balance) values(?,?,?,?,?) ");
                ps.setString(1, str);
                ps.setString(2, towhom);
                ps.setDate(3, date);
                ps.setInt(4, outward);
                ps.setInt(5, balance-outward);

                ps.execute();
                //System.out.println("after query2"+rs.getTimestamp(1));
                warning.setForeground(Color.green);
                warning.setText("insert Successfully!");
         
                 //System.out.println("Here1234    " +rs.getInt(1));
                //in.setText(String.valueOf(rs.getInt(1)));
                //out.setText(String.valueOf(rs.getInt(2)));
                //bal.setText(String.valueOf(rs.getInt(3)));
            }
            catch (SQLException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                    }
            finally
            {
                try {
                    ps.close();
                    con.close();
                    undo_ = true;
                } catch (SQLException ex) {
                    Logger.getLogger(Registry.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
/*        
            System.out.println("over");
            itemList.removeAllItems();
            System.out.println("over11");

            Registry reg = null;

            try {
                reg = new Registry();
            } catch (SQLException ex) {
                Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
            }
            reg.setVisible(true);
            this.setVisible(false);
            */
        }
            
    }//GEN-LAST:event_editActionPerformed

    private void itemListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemListMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_itemListMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
        if(flag)
        {
            flag=true;
            this.initBox();
        }
    }//GEN-LAST:event_formMouseMoved

    private void toWhomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toWhomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toWhomActionPerformed

    private void outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outActionPerformed

    private void itemList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemList2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_itemList2MouseClicked

    private void itemList2InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_itemList2InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_itemList2InputMethodTextChanged

    private void itemList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemList2ActionPerformed
        // TODO add your handling code here:
        String str=null;
        Connection con=null;
        ResultSet rs=null;
        PreparedStatement ps=null;
        
        
        try
        {
            str = (String)itemList2.getSelectedItem();
            con=Connection1.getCon();
            ps = con.prepareStatement("select inward,outward,balance from product where p_item=? and id=(select max(id) from product where p_item=?)");
            ps.setString(1,str);
            ps.setString(2,str);
            rs = ps.executeQuery();
            rs.next();
            bal2.setText(String.valueOf(rs.getInt(3)));
            oldBal=rs.getInt(3);
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
        finally
        {
            try {
                rs.close();
                ps.close();
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Registry.class.getName()).log(Level.SEVERE, null, ex);
            }
         
        }
        
    }//GEN-LAST:event_itemList2ActionPerformed

    private void itemList2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemList2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemList2KeyPressed

    private void in2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_in2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_in2ActionPerformed

    private void edit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit2ActionPerformed
        
        // TODO add your handling code here:
        String str=(String)itemList2.getSelectedItem();
        int inward;
        try
        {
            inward=Integer.parseInt(in2.getText());
        }
        catch(NumberFormatException e)
        {
            warning.setForeground(Color.red);
            warning.setText("inward field can't be empty");
            return;
        }        //int balance = Integer.parseInt(bal2.getText());
        if(in2.getText().equals(""))
        {
            warning.setForeground(Color.red);
            warning.setText("Outward field can't be empty");
            return;
        }
        Connection con=null;
        PreparedStatement ps=null;
        try
            {
            con=Connection1.getCon();
            Calendar calendar = Calendar.getInstance();
            java.sql.Date date = new java.sql.Date(calendar.getTime().getTime());
            
            if(oldBal!=0)
            {
                ps = con.prepareStatement("insert into product(p_item,date,inward,balance) values(?,?,?,?) ");
                ps.setString(1, str);
                ps.setDate(2, date);
                ps.setInt(3, inward);
                ps.setInt(4, oldBal+inward);
                ps.execute();
                //System.out.println("after query2"+rs.getTimestamp(1));
                warning.setForeground(Color.green);
                warning.setText("insert Successfully!");

             }
             else
             {
                ps = con.prepareStatement("update product set date=?,inward=?,balance=? where p_item=? ORDER BY id DESC LIMIT 1");
                ps.setDate(1, date);
                ps.setInt(2, inward);
                ps.setInt(3, inward);
                ps.setString(4, str);

                ps.executeUpdate();
                warning.setForeground(Color.green);
                warning.setText("insert Successfully!");


             }
            //System.out.println("Here1234    " +rs.getInt(1));
            //in.setText(String.valueOf(rs.getInt(1)));
            //out.setText(String.valueOf(rs.getInt(2)));
            //bal.setText(String.valueOf(rs.getInt(3)));
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
        finally
        {
            try {
                ps.close();
                con.close();
                undo1_ = true;
            } catch (SQLException ex) {
                Logger.getLogger(Registry.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        System.out.println("over");
        itemList.removeAllItems();
        System.out.println("over11");
/*
        Registry reg = null;

        try {
            reg = new Registry();
        } catch (SQLException ex) {
            Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
        }
        reg.setVisible(true);
        this.setVisible(false);*/
    }//GEN-LAST:event_edit2ActionPerformed

    private void cancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel2ActionPerformed
        // TODO add your handling code here:
        itemList.removeAllItems();
        Registry reg = null;
        
        try {
            reg = new Registry();
        } catch (SQLException ex) {
            Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
        }
        reg.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancel2ActionPerformed

    private void undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoActionPerformed
        // TODO add your handling code here:
        Connection con=Connection1.getCon();
        PreparedStatement ps = null;
        if(undo_)
        {
            undo_ = false;
            try {
                String name = (String)itemList.getSelectedItem();
                ps = con.prepareStatement("delete  from product where p_item=? ORDER BY id DESC LIMIT 1");
                ps.setString(1,name);
                ps.execute();
                warning.setForeground(Color.green);
                warning.setText("Undo Successfully!");
            } catch (SQLException ex) {
                Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try 
                {
                    ps.close();
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
                warning.setForeground(Color.red);
                warning.setText("Can't be Undone !");
        }
    }//GEN-LAST:event_undoActionPerformed

    private void undo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undo1ActionPerformed
        Connection con=Connection1.getCon();
        PreparedStatement ps = null;
        if(undo1_)
        {
            undo1_ = false;
            try {
                String name = (String)itemList2.getSelectedItem();
                ps = con.prepareStatement("delete  from product where p_item=? ORDER BY id DESC LIMIT 1");
                ps.setString(1,name);
                ps.execute();
                warning.setForeground(Color.green);
                warning.setText("Undo Successfully!");
            } catch (SQLException ex) {
                Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    ps.close();
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
                warning.setForeground(Color.red);
                warning.setText("Can't be Undone !");
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_undo1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new edit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bal;
    private javax.swing.JLabel bal2;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cancel2;
    private javax.swing.JButton edit;
    private javax.swing.JButton edit2;
    private javax.swing.JTextField in2;
    private javax.swing.JComboBox itemList;
    private javax.swing.JComboBox itemList2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField out;
    private javax.swing.JTextField toWhom;
    private javax.swing.JButton undo;
    private javax.swing.JButton undo1;
    private javax.swing.JLabel warning;
    // End of variables declaration//GEN-END:variables
}
